pipeline {
    agent any
    stages {        
        stage('Build') {
            // Build image, output is stereum/${IMAGE}:${RELEASE}-build
            steps {
                checkout scm
                dir("${IMAGE}") {
                    sh 'docker build -f Dockerfile --build-arg=BEACON_BASE=${BASE} --build-arg=RELEASE=${RELEASE} -t stereum/${IMAGE}:${RELEASE}-build .'
                }
            }
        }
        stage('Shrink') {
            // Shrink image using docker-slim, output is stereum/${IMAGE}:${RELEASE}
            steps {
                sh "/var/jenkins_home/docker-slim/docker-slim.sh stereum/${IMAGE}:${RELEASE}"
                sh "docker rmi -f stereum/${IMAGE}:${RELEASE}-build"
            }
        }
        stage('Push') {
            // push image to dockerhub
            steps {
                sh 'docker push stereum/${IMAGE}:${RELEASE}'
                sh 'docker tag stereum/${IMAGE}:${RELEASE} stereum/${IMAGE}:${RELEASE}-${BUILD_NUMBER}'
                sh 'docker push stereum/${IMAGE}:${RELEASE}-${BUILD_NUMBER}'
            }
        }
        stage('Cleanup') {
            // cleanup local images
            steps {
                sh 'docker rmi -f stereum/${IMAGE}:${RELEASE}'
                sh 'docker rmi -f stereum/${IMAGE}:${RELEASE}-${BUILD_NUMBER}'
            }
        }
    }
    post { 
        always { 
            cleanWs()
        }
    }
}
